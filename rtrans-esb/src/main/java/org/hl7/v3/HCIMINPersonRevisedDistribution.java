//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.05 at 09:56:19 AM PDT 
//


package org.hl7.v3;

import java.util.Arrays;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import org.hl7.v3.api.RequestJaxbMessageDistribution;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;extension base="{urn:hl7-org:v3}PRPA_IN101002CA.MCCI_MT000100BC.Message">
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
@XmlRootElement(name = "HCIM_IN_PersonRevisedDistribution")
public class HCIMINPersonRevisedDistribution
    extends PRPAIN101002CAMCCIMT000100BCMessage
    implements RequestJaxbMessageDistribution {

    @XmlTransient
    private final static String DEFAULT_IDENTIFIER_ROOT = "2.16.840.1.113883.3.51.1.1.1";
    @XmlTransient
    private final static String DEFAULT_VERSION_CODE = "V3PR1";
    @XmlTransient
    private final static String DEFAULT_INTERACTION_ID_ROOT = "2.16.840.1.113883.3.51.1.1.2";
    @XmlTransient
    private final static String DEFAULT_PROCESSING_CODE = "P";
    @XmlTransient
    private final static String DEFAULT_ACCEPT_ACK_CODE = "NE";
    @XmlTransient
    private final static CommunicationFunctionType DEFAULT_RECEIVER_TYPE_CODE = CommunicationFunctionType.RCV;
    @XmlTransient
    private final static String DEFAULT_RECEIVER_DEVICE_DETERMINERCODE = "INSTANCE";
    @XmlTransient
    private final static List<String> DEFAULT_RECEIVER_DEVICE_CLASSCODE = Arrays.asList(new String[]{"DEV"});
    @XmlTransient
    private final static String DEFAULT_RECEIVER_DEVICE_ID_ROOT = "2.16.840.1.113883.3.51.1.1.4";
    @XmlTransient
    private final static List<String> DEFAULT_RECEIVER_AGENT_CLASSCODE = Arrays.asList(new String[]{"AGNT"});
    @XmlTransient
    private final static String DEFAULT_RECEIVER_REPRESENTED_ORG_DETERMINERCODE = "INSTANCE";
    @XmlTransient
    private final static List<String> DEFAULT_RECEIVER_REPRESENTED_ORG_CLASSCODE = Arrays.asList(new String[]{"ORG"});
    @XmlTransient
    private final static String DEFAULT_RECEIVER_REPRESENTED_ORG_ID_ROOT = "2.16.840.1.113883.3.51.1.1.3";
    @XmlTransient
    private final static CommunicationFunctionType DEFAULT_SENDER_TYPE_CODE = CommunicationFunctionType.SND;
    @XmlTransient
    private final static String DEFAULT_SENDER_DEVICE_DETERMINERCODE = "INSTANCE";
    @XmlTransient
    private final static List<String> DEFAULT_SENDER_DEVICE_CLASSCODE = Arrays.asList(new String[]{"DEV"});
    @XmlTransient
    private final static String DEFAULT_SENDER_DEVICE_ID_ROOT = "2.16.840.1.113883.3.51.1.1.5";
    @XmlTransient
    private final static List<String> DEFAULT_SENDER_AGENT_CLASSCODE = Arrays.asList(new String[]{"AGNT"});
    @XmlTransient
    private final static String DEFAULT_SENDER_REPRESENTED_ORG_DETERMINERCODE = "INSTANCE";
    @XmlTransient
    private final static List<String> DEFAULT_SENDER_REPRESENTED_ORG_CLASSCODE = Arrays.asList(new String[]{"ORG"});
    @XmlTransient
    private final static String DEFAULT_SENDER_REPRESENTED_ORG_ID_ROOT = "2.16.840.1.113883.3.51.1.1.3";
    @XmlTransient
    private final static List<String> DEFAULT_CONTROL_ACT_PROCESS_CLASSCODE = Arrays.asList(new String[]{"CACT"});
    @XmlTransient
    private final static List<String> DEFAULT_CONTROL_ACT_PROCESS_MOODCODE = Arrays.asList(new String[]{"EVN"});
    @XmlTransient
    public final static String DEFAULT_INNER_PERSON_ID_ROOT = "2.16.840.1.113883.3.51.1.1.6.1";
    @XmlTransient
    private final static List<String> DEFAULT_CONTROL_ACT_PROCESS_DATA_ENTERER_TYPECODE = Arrays.asList(new String[]{"ENT"});
    @XmlTransient
    private final static List<String> DEFAULT_CONTROL_ACT_PROCESS_ASSIGNED_PERSON_CLASSCODE = Arrays.asList(new String[]{"PRS"});
    @XmlTransient
    private final static String DEFAULT_CONTROL_ACT_PROCESS_ASSIGNED_PERSON_ID_ROOT = "2.16.840.1.113883.3.51.1.1.7";
    @XmlTransient
    private final static String DEFAULT_PROCESSING_MODE_CODE = "I";
    @XmlTransient
    public final static String DEFAULT_REGISTRATION_IDENTIFIER_ROOT = "2.16.840.1.113883.3.51.1.1.6";
    @XmlTransient
    public final static String DEFAULT_IDENTIFIED_PERSON_ID_ASSIGN_AUTH_NAME = "PHSA_P";
    @XmlTransient
    public final static List<String> DEFAULT_SUBJECT_TYPE_CODE = Arrays.asList(new String[]{"SUBJ"});
    @XmlTransient
    private final List<String> DEFAULT_REGISTRATION_EVENT_CLASS_CODE = Arrays.asList(new String[]{"REG"});
    @XmlTransient
    private final static String DEFAULT_REGISTRATION_EVENT_MOOD_CODE = "APT";
    @XmlTransient
    private final List<String> DEFAULT_SUBJECT1_TYPECODE = Arrays.asList(new String[]{"SBJ"});
    @XmlTransient
    private final List<String> DEFAULT_IDENTIFIED_PERSON_CLASS_CODE = Arrays.asList(new String[]{"IDENT"});
    @XmlTransient
    public static List<String> DEFAULT_IDENTIFIED_PERSON_INNER_CLASS_CODE = Arrays.asList(new String[]{"PSN"});
    @XmlTransient
    public static String DEFAULT_IDENTIFIED_PERSON_INNER_DETERMINER_CODE = "INSTANCE";
    @XmlTransient
    public final static String DEFAULT_IDENTIFIED_PERSON_INNER_ID_ASSIGN_AUTH_NAME = "MOH_CRS";

    public HCIMINPersonRevisedDistribution() {
        populateDefaults();
    }

    private void populateDefaults() {
        final ObjectFactory objectFactory = new ObjectFactory();

        // <id>
        id = new II();
        id.setRoot(DEFAULT_IDENTIFIER_ROOT);
        this.setId(id);

        // <versionCode>
        versionCode = new CS();
        versionCode.setCode(DEFAULT_VERSION_CODE);

        // <interactionId>
        interactionId = new II();
        interactionId.setRoot(DEFAULT_INTERACTION_ID_ROOT);
        this.setInteractionId(interactionId);

        // <processingCode>
        processingCode = new CS();
        processingCode.setCode(DEFAULT_PROCESSING_CODE);

        // <processingModeCode>
        processingModeCode = new CS();
        processingModeCode.setCode(DEFAULT_PROCESSING_MODE_CODE);

        // <acceptAckCode>
        acceptAckCode = new CS();
        acceptAckCode.setCode(DEFAULT_ACCEPT_ACK_CODE);

        // <receiver>    
        receiver = new MCCIMT000100BCReceiver();
        receiver.typeCode = DEFAULT_RECEIVER_TYPE_CODE;
        receiver.device = new MCCIMT000100BCDevice(); 
        receiver.device.determinerCode = DEFAULT_RECEIVER_DEVICE_DETERMINERCODE;
        receiver.device.classCode = DEFAULT_RECEIVER_DEVICE_CLASSCODE;
        receiver.device.id = new II();
        receiver.device.id.root = DEFAULT_RECEIVER_DEVICE_ID_ROOT;
//        receiver.device.id.use = DEFAULT_BUSINESS_USE;
        MCCIMT000100BCAgent receiverAgent = new MCCIMT000100BCAgent();
        receiver.device.asAgent = objectFactory.createMCCIMT000100BCDeviceAsAgent(receiverAgent);
        receiverAgent.classCode = DEFAULT_RECEIVER_AGENT_CLASSCODE;
        MCCIMT000100BCOrganization receiverRepresentedOrganization = new MCCIMT000100BCOrganization();
        receiverAgent.representedOrganization = objectFactory.createMCCIMT000100BCAgentRepresentedOrganization(receiverRepresentedOrganization);
        receiverRepresentedOrganization.determinerCode = DEFAULT_RECEIVER_REPRESENTED_ORG_DETERMINERCODE;
        receiverRepresentedOrganization.classCode = DEFAULT_RECEIVER_REPRESENTED_ORG_CLASSCODE;
        receiverRepresentedOrganization.id = new II();
        receiverRepresentedOrganization.id.root = DEFAULT_RECEIVER_REPRESENTED_ORG_ID_ROOT;
//        receiverRepresentedOrganization.id.use = DEFAULT_BUSINESS_USE;

        // <sender>
        sender = new MCCIMT000100BCSender();
        sender.typeCode = DEFAULT_SENDER_TYPE_CODE;
        sender.device = new MCCIMT000100BCDevice();
        sender.device.determinerCode = DEFAULT_SENDER_DEVICE_DETERMINERCODE;
        sender.device.classCode = DEFAULT_SENDER_DEVICE_CLASSCODE;
        sender.device.id = new II();
        sender.device.id.root = DEFAULT_SENDER_DEVICE_ID_ROOT;
//        sender.device.id.use = DEFAULT_BUSINESS_USE;

        MCCIMT000100BCAgent senderAgent = new MCCIMT000100BCAgent();
        sender.device.asAgent = objectFactory.createMCCIMT000100BCDeviceAsAgent(senderAgent);
        senderAgent.classCode = DEFAULT_SENDER_AGENT_CLASSCODE;
        MCCIMT000100BCOrganization senderRepresentedOrganization = new MCCIMT000100BCOrganization();
        senderAgent.representedOrganization = objectFactory.createMCCIMT000100BCAgentRepresentedOrganization(senderRepresentedOrganization);
        senderRepresentedOrganization.determinerCode = DEFAULT_SENDER_REPRESENTED_ORG_DETERMINERCODE;
        senderRepresentedOrganization.classCode = DEFAULT_SENDER_REPRESENTED_ORG_CLASSCODE;
        senderRepresentedOrganization.id = new II();
        senderRepresentedOrganization.id.root = DEFAULT_SENDER_REPRESENTED_ORG_ID_ROOT;
//        senderRepresentedOrganization.id.use = DEFAULT_BUSINESS_USE;

        // <controlActProcess>
        controlActProcess = new PRPAIN101002CAMFMIMT700788BCControlActProcess();
        controlActProcess.classCode = DEFAULT_CONTROL_ACT_PROCESS_CLASSCODE;
        controlActProcess.moodCode = DEFAULT_CONTROL_ACT_PROCESS_MOODCODE;

        controlActProcess.dataEnterer = new MFMIMT700788BCDataEnterer();
        controlActProcess.dataEnterer.typeCode = DEFAULT_CONTROL_ACT_PROCESS_DATA_ENTERER_TYPECODE;
        controlActProcess.dataEnterer.assignedPerson = new COCTMT090100BCAssignedPerson();
        controlActProcess.dataEnterer.assignedPerson.classCode = DEFAULT_CONTROL_ACT_PROCESS_ASSIGNED_PERSON_CLASSCODE;
        controlActProcess.dataEnterer.assignedPerson.id = new II();
        controlActProcess.dataEnterer.assignedPerson.id.root = DEFAULT_CONTROL_ACT_PROCESS_ASSIGNED_PERSON_ID_ROOT;
//        controlActProcess.dataEnterer.assignedPerson.id.use = DEFAULT_BUSINESS_USE;

        PRPAIN101002CAMFMIMT700788BCSubject subject = new PRPAIN101002CAMFMIMT700788BCSubject();
        controlActProcess.setSubject(subject);
        PRPAIN101002CAMFMIMT700788BCRegistrationEvent registrationEvent = new PRPAIN101002CAMFMIMT700788BCRegistrationEvent();
        subject.setRegistrationEvent(registrationEvent);
        subject.typeCode = DEFAULT_SUBJECT_TYPE_CODE;
        registrationEvent.classCode = DEFAULT_REGISTRATION_EVENT_CLASS_CODE;
        registrationEvent.moodCode = DEFAULT_REGISTRATION_EVENT_MOOD_CODE;
        PRPAIN101002CAMFMIMT700788BCSubject2 subject1 = new PRPAIN101002CAMFMIMT700788BCSubject2();
        registrationEvent.setSubject1(subject1);
        subject1.typeCode = DEFAULT_SUBJECT1_TYPECODE;
        PRPAMT101098BCIdentifiedPerson identifiedPerson = new PRPAMT101098BCIdentifiedPerson();
        subject1.setIdentifiedPerson(identifiedPerson);
        identifiedPerson.classCode = DEFAULT_IDENTIFIED_PERSON_CLASS_CODE;
    }
    
    @Override
    public MCCIMT000100BCReceiver getReceiverDistribution() {
        return this.receiver;
    }

}
