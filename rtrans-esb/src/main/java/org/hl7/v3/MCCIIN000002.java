//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.11.11 at 02:36:06 PM PST 
//


package org.hl7.v3;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;extension base="{urn:hl7-org:v3}MCCI_MT000002BC.Message">
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
@XmlRootElement(name = "MCCI_IN000002")
public class MCCIIN000002 extends MCCIMT000002BCMessage {
    
    @XmlTransient
    private final static String DEFAULT_IDENTIFIER_ROOT = "2.16.840.1.113883.3.51.1.1.1";
    @XmlTransient
    private final static String DEFAULT_ACK_DIST_REQUEST_EXTENSION = "HCIM_IN_PersonRevisedDistribution.ACK";
    @XmlTransient
    private final static String DEFAULT_INTERACTION_ID_ROOT = "2.16.840.1.113883.3.51.1.1.2";
    @XmlTransient
    private final static String DEFAULT_TYPE_ID_ROOT = "2.16.840.1.113883.3.51.1.1.2";
    @XmlTransient
    private final static String DEFAULT_PROCESSING_CODE = "P";
    @XmlTransient
    private final static String DEFAULT_ACCEPT_ACK_CODE = "AL";
    @XmlTransient
    private final static CommunicationFunctionType DEFAULT_RECEIVER_TYPE_CODE = CommunicationFunctionType.RCV;
    @XmlTransient
    private final static String DEFAULT_RECEIVER_DEVICE_DETERMINERCODE = "INSTANCE";
    @XmlTransient
    private final static List<String> DEFAULT_RECEIVER_DEVICE_CLASSCODE = Arrays.asList(new String[]{"DEV"});
    @XmlTransient
    private final static String DEFAULT_RECEIVER_DEVICE_ID_ROOT = "2.16.840.1.113883.3.51.1.1.4";
    @XmlTransient
    private final static List<String> DEFAULT_RECEIVER_AGENT_CLASSCODE = Arrays.asList(new String[]{"AGNT"});
    @XmlTransient
    private final static String DEFAULT_RECEIVER_REPRESENTED_ORG_DETERMINERCODE = "INSTANCE";
    @XmlTransient
    private final static List<String> DEFAULT_RECEIVER_REPRESENTED_ORG_CLASSCODE = Arrays.asList(new String[]{"ORG"});
    @XmlTransient
    private final static String DEFAULT_RECEIVER_REPRESENTED_ORG_ID_ROOT = "2.16.840.1.113883.3.51.1.1.3";
    @XmlTransient
    private final static CommunicationFunctionType DEFAULT_SENDER_TYPE_CODE = CommunicationFunctionType.SND;
    @XmlTransient
    private final static String DEFAULT_SENDER_DEVICE_DETERMINERCODE = "INSTANCE";
    @XmlTransient
    private final static List<String> DEFAULT_SENDER_DEVICE_CLASSCODE = Arrays.asList(new String[]{"DEV"});
    @XmlTransient
    private final static String DEFAULT_SENDER_DEVICE_ID_ROOT = "2.16.840.1.113883.3.51.1.1.5";
    @XmlTransient
    private final static List<String> DEFAULT_SENDER_AGENT_CLASSCODE = Arrays.asList(new String[]{"AGNT"});
    @XmlTransient
    private final static String DEFAULT_SENDER_REPRESENTED_ORG_DETERMINERCODE = "INSTANCE";
    @XmlTransient
    private final static List<String> DEFAULT_SENDER_REPRESENTED_ORG_CLASSCODE = Arrays.asList(new String[]{"ORG"});
    @XmlTransient
    private final static String DEFAULT_SENDER_REPRESENTED_ORG_ID_ROOT = "2.16.840.1.113883.3.51.1.1.3";
    @XmlTransient
    public final static String DEFAULT_INNER_PERSON_ID_ROOT = "2.16.840.1.113883.3.51.1.1.6.1";
    @XmlTransient
    private final static String DEFAULT_PROCESSING_MODE_CODE = "I";
    @XmlTransient
    public final static String DEFAULT_REGISTRATION_IDENTIFIER_ROOT = "2.16.840.1.113883.3.51.1.1.6";
    @XmlTransient
    public final static String DEFAULT_IDENTIFIED_PERSON_ID_ASSIGN_AUTH_NAME = "PHSA_P";
    @XmlTransient
    public final static String ACKNOWLEDGEMENT_TYPECODE_CA = "CA";

    public MCCIIN000002() {
        populateDefaults();
    }

    private void populateDefaults() {
        final ObjectFactory objectFactory = new ObjectFactory();

        // <id>
        id = new II();
        id.setRoot(DEFAULT_IDENTIFIER_ROOT);
        this.setId(id);

        // <typeId>
        typeId = new II();
        typeId.root = DEFAULT_TYPE_ID_ROOT;
//        typeId.displayable = DEFAULT_TYPE_ID_DISPLAYABLE;
//        typeId.extension = DEFAULT_TYPE_ID_EXTENSION;
//        typeId.assigningAuthorityName = DEFAULT_TYPE_ID_ASSIGN_AUTH_NAME;
//        typeId.use = DEFAULT_TYPE_ID_USE;

        // <interactionId>
        interactionId = new II();
        interactionId.root = DEFAULT_INTERACTION_ID_ROOT;
        interactionId.extension = DEFAULT_ACK_DIST_REQUEST_EXTENSION;
//        interactionId.use = DEFAULT_BUSINESS_USE;
//        interactionId.displayable = DEFAULT_INTERACTION_DISPLAYABLE;

        // <processingCode>
        processingCode = new CS();
        processingCode.setCode(DEFAULT_PROCESSING_CODE);

        // <processingModeCode>
        processingModeCode = new CS();
        processingModeCode.setCode(DEFAULT_PROCESSING_MODE_CODE);

        // <acceptAckCode>
        acceptAckCode = new CS();
        acceptAckCode.setCode(DEFAULT_ACCEPT_ACK_CODE);

        // <receiver>    
        receiver = new MCCIMT000002BCReceiver();
        receiver.typeCode = DEFAULT_RECEIVER_TYPE_CODE;
        receiver.device = new MCCIMT000002BCDevice(); 
        receiver.device.determinerCode = DEFAULT_RECEIVER_DEVICE_DETERMINERCODE;
        receiver.device.classCode = DEFAULT_RECEIVER_DEVICE_CLASSCODE;
        receiver.device.id = new II();
        receiver.device.id.root = DEFAULT_RECEIVER_DEVICE_ID_ROOT;
//        receiver.device.id.use = DEFAULT_BUSINESS_USE;
        MCCIMT000002BCAgent receiverAgent = new MCCIMT000002BCAgent();
        receiver.device.agencyFor = objectFactory.createMCCIMT000002BCDeviceAgencyFor(receiverAgent);
        receiverAgent.classCode = DEFAULT_RECEIVER_AGENT_CLASSCODE;
        MCCIMT000002BCOrganization receiverRepresentedOrganization = new MCCIMT000002BCOrganization();
        receiverAgent.representedOrganization = objectFactory.createMCCIMT000002BCAgentRepresentedOrganization(receiverRepresentedOrganization);
        receiverRepresentedOrganization.determinerCode = DEFAULT_RECEIVER_REPRESENTED_ORG_DETERMINERCODE;
        receiverRepresentedOrganization.classCode = DEFAULT_RECEIVER_REPRESENTED_ORG_CLASSCODE;
        receiverRepresentedOrganization.id = new II();
        receiverRepresentedOrganization.id.root = DEFAULT_RECEIVER_REPRESENTED_ORG_ID_ROOT;

        // <sender>
        sender = new MCCIMT000002BCSender();
        sender.typeCode = DEFAULT_SENDER_TYPE_CODE;
        sender.device = new MCCIMT000002BCDevice();
        sender.device.determinerCode = DEFAULT_SENDER_DEVICE_DETERMINERCODE;
        sender.device.classCode = DEFAULT_SENDER_DEVICE_CLASSCODE;
        sender.device.id = new II();
        sender.device.id.root = DEFAULT_SENDER_DEVICE_ID_ROOT;

        MCCIMT000002BCAgent senderAgent = new MCCIMT000002BCAgent();
        sender.device.agencyFor = objectFactory.createMCCIMT000002BCDeviceAgencyFor(senderAgent);
        senderAgent.classCode = DEFAULT_SENDER_AGENT_CLASSCODE;
        MCCIMT000002BCOrganization senderRepresentedOrganization = new MCCIMT000002BCOrganization();
        senderAgent.representedOrganization = objectFactory.createMCCIMT000002BCAgentRepresentedOrganization(senderRepresentedOrganization);
        senderRepresentedOrganization.determinerCode = DEFAULT_SENDER_REPRESENTED_ORG_DETERMINERCODE;
        senderRepresentedOrganization.classCode = DEFAULT_SENDER_REPRESENTED_ORG_CLASSCODE;
        senderRepresentedOrganization.id = new II();
        senderRepresentedOrganization.id.root = DEFAULT_SENDER_REPRESENTED_ORG_ID_ROOT;

        // <acknowledgement><acknowledgementDetail>
        MCCIMT000002BCAcknowledgementDetail hcimAckDetail = new MCCIMT000002BCAcknowledgementDetail();

//        CV hcimAckDetailCode = new CV();
//        hcimAckDetail.setCode(hcimAckDetailCode);
//        ST hcimAckDetailText = new ST();
//        hcimAckDetail.setText(hcimAckDetailText);
        
        MCCIMT000002BCAcknowledgement hcimAcknowledgement = new MCCIMT000002BCAcknowledgement();
        acknowledgement = objectFactory.createMCCIMT000002BCMessageAcknowledgement(hcimAcknowledgement);
        hcimAcknowledgement.getAcknowledgementDetail().add(hcimAckDetail);
        hcimAcknowledgement.targetMessage = hcimAcknowledgement.getTargetMessage();
        
        hcimAcknowledgement.typeId = hcimAcknowledgement.getTypeId();
        hcimAcknowledgement.typeCode = ACKNOWLEDGEMENT_TYPECODE_CA;

    }
    
}
