# This is a manual workflow that performs following activities:
# 1. Determine the version number tag i.e. release_1.0_<branch-name>_<build execution>
# 2. Determine tags for OpenShift image
# 3. Build images from Dockerfile using the image name and tags
# 4. Upload the images in image repository in tools namespace
# 5. Deploy the image in Dev environment
# 6. Tag the commit in Git with release number

name: release-rtrans-esb
# Build the image and deploy in OpenShift environment
env:
  # Registries such as GHCR, Quay.io, and Docker Hub are supported.
  OPENSHIFT_SERVER: ${{ secrets.C5839F_OPENSHIFT_SERVER }}
  OPENSHIFT_TOKEN: ${{ secrets.C5839F_OPENSHIFT_GITHUB_ACTIONS_SA_TOKEN }}
  DEFAULT_NAMESPACE: "c5839f-tools"
  DEV_NAMESPACE: c5839f-dev
  IMAGE_REGISTRY: image-registry.apps.silver.devops.gov.bc.ca/c5839f-tools
  IMAGE_REGISTRY_USER: ${{ secrets.C5839F_OPENSHIFT_GITHUB_ACTIONS_SA_USER }}
  IMAGE_REGISTRY_PASSWORD: ${{ secrets.C5839F_OPENSHIFT_GITHUB_ACTIONS_SA_TOKEN }}
  IMAGE_NAME: rtrans-esb
  IMAGE_TAGS:
  RELEASE_VERSION:

on:
  # Run the workflow manually, instead of on a push.
  # The user specifies the optional tag and branch
  # --------------------------------------------------------------------------
  workflow_dispatch:
    inputs:
      OPENSHIFT_IMAGE_TAG:
        description: "Optional parameter for additional tags on released images. "
        required: false
        default:
      branch:
        description: "Enter branch name (defaults to main):"
        required: true
        default: 4555_rtrans-actions

jobs:
  createRtransRelease:
    runs-on: ubuntu-latest

    # Map a step output to a job output
    outputs:
      OPENSHIFT_IMAGE_SHA: ${{ steps.push-image.outputs.digest }}
      RELEASE_VERSION: ${{ env.RELEASE_VERSION }}

    steps:
      # Check out the code
      - name: Check out code
        id: checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}

      # Determine the version number tag i.e. release_1.0_<branch-name>_<build execution>
      - name: Determine Version number
        # Branch name is taken from input
        run: |
          echo "RELEASE_VERSION=release_1.0_${{ github.event.inputs.branch }}_${{github.run_number}}" | tee -a $GITHUB_ENV

      # Determine tags for OpenShift image
      - name: Determine image tags
        run: |
          echo "IMAGE_TAGS= ${GITHUB_SHA::12} ${{ env.RELEASE_VERSION }} ${{ github.event.inputs.OPENSHIFT_IMAGE_TAG }}  " | tee -a $GITHUB_ENV

      # Build from docker file
      - name: Build from Dockerfile
        id: build-docker
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ env.IMAGE_TAGS }}
          context: ./rtrans-esb
          dockerfiles: |
            ./rtrans-esb/Dockerfile

      # Upload the images in image repository in tools namespace
      - name: Push image to registry
        id: push-image
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-docker.outputs.image }}
          tags: ${{ steps.build-docker.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.IMAGE_REGISTRY_USER }}
          password: ${{ env.IMAGE_REGISTRY_PASSWORD }}

  # This job updates the Gitops repository with image created in  this workflow.
  # Updating the image in deployment.rtrans.yml will result in deploying that image in OpenShift
  Deploy:
    runs-on: ubuntu-latest
    needs: [createRtransRelease]

    steps:
      - name: Step to move image to dev namespace
        run: |
          echo "This step should move the image to repository to test namespace"

      # Login to OpenShift
      - name: Log in to OpenShift
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ env.OPENSHIFT_SERVER }}
          openshift_token: ${{ env.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ env.DEFAULT_NAMESPACE }}

      # Push the image to selected repository
      - name: Push Image to dev
        run: |
          oc tag ${{env.DEFAULT_NAMESPACE}}/${{env.IMAGE_NAME}}@${{needs.createRtransRelease.outputs.OPENSHIFT_IMAGE_SHA}} ${{env.DEV_NAMESPACE}}/${{env.IMAGE_NAME}}:${{needs.createRtransRelease    .outputs.RELEASE_VERSION}}

      - name: Prepare deploy key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.GITOPS_C5839F_PRIVATE_KEY }}

      - name: Check out manifest repo
        uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.GITOPS_C5839F_PRIVATE_KEY }}
          repository: bcgov-c/tenant-gitops-c5839f
          ref: 6602-Rtrans-Set-Up

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v1

      - name: Update image ID and commit change
        if: ${{ success() }}
        run: |
          cd  rtrans-devops/overlay/dev
          kustomize edit set image "rtrans-image=image-registry.openshift-image-registry.svc:5000/c5839f-tools/rtrans-esb@${{needs.createRtransRelease.outputs.OPENSHIFT_IMAGE_SHA}}"
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -am "Deploying release: ${{needs.createRtransRelease.outputs.RELEASE_VERSION}} in dev using release-rtrans-esb workflow."
          git push origin

  # This job creates a tag in Git repository with same name as release tag
  createTagInGit:
    runs-on: ubuntu-latest
    needs: [createRtransRelease]
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # It should get the code from branch that triggered this workflow
      - name: Check out code
        id: checkout
        uses: actions/checkout@v3
        with:
          ref: 4555_rtrans-actions

      # Tag and push the tag
      # git fetch --all
      # git pull
      - name: Tag the commit with Release number
        id: tag
        run: |
          echo "Tagging the commit: ${GITHUB_SHA}"
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a -f "v${{needs.createRtransRelease.outputs.RELEASE_VERSION}}" -m "Tag generated by GitHub Actions: release-rtrans-esb."
          git push origin --tags
