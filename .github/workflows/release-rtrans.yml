# This is a manual workflow that performs following activities:
# 1. Determine the version number tag i.e. release_1.0_<branch-name>_<build execution>
# 2. Determine tags for OpenShift image
# 3. Build images from Dockerfile using the image name and tags
# 4. Upload the images in image repository in tools namespace
# 5. Tag the commit in Git with release number

name: release-rtrans-esb
# Build the image and deploy in OpenShift environment
env:
  # Registries such as GHCR, Quay.io, and Docker Hub are supported.
  IMAGE_REGISTRY: image-registry.apps.silver.devops.gov.bc.ca/c5839f-tools
  IMAGE_REGISTRY_USER: ${{ secrets.C5839F_OPENSHIFT_GITHUB_ACTIONS_SA_USER }}
  IMAGE_REGISTRY_PASSWORD: ${{ secrets.C5839F_OPENSHIFT_GITHUB_ACTIONS_SA_TOKEN }}
  IMAGE_NAME: rtrans-esb
  IMAGE_TAGS:
  RELEASE_VERSION:

on:
  # Run the workflow manually, instead of on a push.
  # The user specifies the optional tag and branch
  # --------------------------------------------------------------------------
  workflow_dispatch:
    inputs:
      OPENSHIFT_IMAGE_TAG:
        description: "Optional parameter for additional tags on released images. "
        required: false
        default:
      branch:
        description: "Enter branch name (defaults to main):"
        required: true
        default: 4555_rtrans-actions

jobs:
  createRtransRelease:
    runs-on: ubuntu-latest

    steps:
      # Check out the code
      - name: Check out code
        id: checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}

      # Determine the version number tag i.e. release_1.0_<branch-name>_<build execution>
      - name: Determine Version number
        # Branch name is taken from input
        run: |
          echo "RELEASE_VERSION=release_1.0_${{ github.event.inputs.branch }}_${{github.run_number}}" | tee -a $GITHUB_ENV

      # Determine tags for OpenShift image
      - name: Determine image tags
        run: |
          echo "IMAGE_TAGS= ${GITHUB_SHA::12} ${{ env.RELEASE_VERSION }} ${{ github.event.inputs.OPENSHIFT_IMAGE_TAG }}  " | tee -a $GITHUB_ENV

      # Build from docker file
      - name: Build from Dockerfile
        id: build-docker
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ env.IMAGE_TAGS }}
          context: ./rtrans-esb
          dockerfiles: |
            ./rtrans-esb/Dockerfile

      # Upload the images in image repository in tools namespace
      - name: Push image to registry
        id: push-image
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-docker.outputs.image }}
          tags: ${{ steps.build-docker.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.IMAGE_REGISTRY_USER }}
          password: ${{ env.IMAGE_REGISTRY_PASSWORD }}

      # Tag the commit in Git with release number and <Check> Optional tags
      - name: Tag the commit with Release number
        id: tag
        run: |
          echo "Tagging the commit: ${GITHUB_SHA}"
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a -f "v${{env.RELEASE_VERSION}}" -m "Tag generated by GitHub Actions: release-rtrans-esb."
          git push origin --tags
